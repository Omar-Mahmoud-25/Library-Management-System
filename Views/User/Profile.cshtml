@model UserProfileViewModel

@{
    ViewData["Title"] = "My Profile";
    var isEditing = ViewBag.IsEditing as bool? ?? false;
}

<style>
    body {
        background-color: #f8f9fa;
        color: #212529;
    }

    .profile-container {
        background: #ffffff;
        border-radius: 15px;
        padding: 2rem;
        margin-top: 2rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    }
    
    .profile-header {
        text-align: center;
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 2px solid #0d6efd33;
    }
    
    .profile-avatar {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: linear-gradient(135deg, #0d6efd, #00b3ff);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        font-size: 3rem;
        font-weight: bold;
        color: #fff;
    }
    
    .profile-info {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid #dee2e6;
    }
    
    .info-item:last-child {
        border-bottom: none;
    }
    
    .info-label {
        font-weight: 600;
        color: #0d6efd;
        min-width: 140px;
    }
    
    .info-value {
        color: #212529;
        text-align: right;
        flex: 1;
    }
    
    .badge-custom {
        font-size: 0.8rem;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin: 2rem 0;
    }
    
    .stat-card {
        background: #e9f3ff;
        border: 1px solid #cfe2ff;
        border-radius: 10px;
        padding: 1.5rem;
        text-align: center;
    }
    
    .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #0d6efd;
        display: block;
    }
    
    .stat-label {
        color: #555;
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }
    
    .form-floating > label {
        color: #6c757d;
    }
    
    .form-control {
        background-color: #fff;
        color: #212529;
        border: 1px solid #ced4da;
    }

    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .btn-success {
        background-color: #198754;
        border-color: #198754;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-outline-warning {
        color: #ffc107;
        border-color: #ffc107;
    }

    .btn-outline-warning:hover {
        background-color: #ffc107;
        color: #212529;
    }

    .text-light {
        color: #212529 !important;
    }
</style>

<div class="container">
    <div class="profile-container">
        <div class="profile-header">
            <div class="profile-avatar">
                @Model.FirstName.Substring(0, 1).ToUpper()@Model.LastName.Substring(0, 1).ToUpper()
            </div>
            <h2 class="text-dark mb-2">@Model.FullName</h2>
            <div class="d-flex justify-content-center gap-2">
                @if (Model.IsAdmin)
                {
                    <span class="badge bg-warning badge-custom">Administrator</span>
                }
                else
                {
                    <span class="badge bg-info badge-custom">Member</span>
                }
                @if (Model.IsActive)
                {
                    <span class="badge bg-success badge-custom">Active</span>
                }
                else
                {
                    <span class="badge bg-danger badge-custom">Inactive</span>
                }
            </div>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="stats-grid">
            <div class="stat-card">
                <span class="stat-number">@Model.TotalBorrowings</span>
                <div class="stat-label">Total Borrowings</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">@Model.ActiveBorrowings</span>
                <div class="stat-label">Active Borrowings</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">@((DateTime.Now - Model.JoiningDate).Days)</span>
                <div class="stat-label">Days as Member</div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="profile-info">
                    <h5 class="text-light mb-3">
                        <i class="bi bi-person-circle"></i> Personal Information
                    </h5>
                    
                    <form asp-action="Profile" method="post" id="profileForm">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.JoiningDate)
                        @Html.HiddenFor(m => m.IsAdmin)
                        @Html.HiddenFor(m => m.IsActive)
                        @Html.HiddenFor(m => m.TotalBorrowings)
                        @Html.HiddenFor(m => m.ActiveBorrowings)

                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input asp-for="FirstName" class="form-control" id="firstName" readonly />
                                    <label asp-for="FirstName"></label>
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input asp-for="LastName" class="form-control" id="lastName" readonly />
                                    <label asp-for="LastName"></label>
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <input asp-for="Email" class="form-control" id="email" readonly />
                                    <label asp-for="Email"></label>
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="form-floating">
                                    <input asp-for="PhoneNumber" class="form-control" id="phoneNumber" readonly />
                                    <label asp-for="PhoneNumber"></label>
                                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex gap-3 mt-4" id="actionButtons">
                            <button type="button" class="btn btn-primary" id="editBtn">
                                <i class="bi bi-pencil"></i> Edit Profile
                            </button>
                            <button type="submit" class="btn btn-success d-none" id="saveBtn">
                                <i class="bi bi-check"></i> Save Changes
                            </button>
                            <button type="button" class="btn btn-secondary d-none" id="cancelBtn">
                                <i class="bi bi-x"></i> Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <div class="col-lg-4">
                <div class="profile-info">
                    <h5 class="text-light mb-3">
                        <i class="bi bi-info-circle"></i> Account Details
                    </h5>
                    
                    <div class="info-item">
                        <span class="info-label">Member Since:</span>
                        <span class="info-value">@Model.JoiningDate.ToString("MMMM dd, yyyy")</span>
                    </div>
                    
                    <div class="info-item">
                        <span class="info-label">Account Type:</span>
                        <span class="info-value">@(Model.IsAdmin ? "Administrator" : "Member")</span>
                    </div>
                    
                    <div class="info-item">
                        <span class="info-label">Status:</span>
                        <span class="info-value">
                            @if (Model.IsActive)
                            {
                                <span class="text-success">Active</span>
                            }
                            else
                            {
                                <span class="text-danger">Inactive</span>
                            }
                        </span>
                    </div>
                </div>
                
                <div class="profile-info">
                    <h5 class="text-light mb-3">
                        <i class="bi bi-shield-lock"></i> Security
                    </h5>
                    
                    <a asp-action="ChangePassword" class="btn btn-outline-warning w-100">
                        <i class="bi bi-key"></i> Change Password
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.getElementById('editBtn').addEventListener('click', function() {
            // Enable form fields
            document.getElementById('firstName').removeAttribute('readonly');
            document.getElementById('lastName').removeAttribute('readonly');
            document.getElementById('phoneNumber').removeAttribute('readonly');
            
            // Toggle buttons
            document.getElementById('editBtn').classList.add('d-none');
            document.getElementById('saveBtn').classList.remove('d-none');
            document.getElementById('cancelBtn').classList.remove('d-none');
        });
        
        document.getElementById('cancelBtn').addEventListener('click', function() {
            // Reload the page to reset form
            window.location.reload();
        });
        
        // Store original values for cancel functionality
        const originalValues = {
            firstName: document.getElementById('firstName').value,
            lastName: document.getElementById('lastName').value,
            email: document.getElementById('email').value,
            phoneNumber: document.getElementById('phoneNumber').value
        };
    </script>
}