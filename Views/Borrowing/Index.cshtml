@using LibraryManagementSystem.Entities
@model IEnumerable<Borrowing>

@{
    ViewData["Title"] = "Borrowings List";
    var isAdmin = ViewBag.IsAdmin as bool? ?? false;
    var selectedStatus = ViewBag.SelectedStatus as string ?? "";
    var searchTerm = ViewBag.SearchTerm as string ?? "";
}

<div class="container mt-4">
    <h2><i class="bi bi-book me-2"></i> Borrowings List</h2>

    <!-- Stats Section -->
    <div class="row text-center mt-4">
        <div class="col-md-3 mb-3">
            <div class="card shadow-sm border-primary">
                <div class="card-body">
                    <h6 class="text-muted">Active Borrowings</h6>
                    <h3 class="text-primary">@ViewBag.BorrowedCount</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card shadow-sm border-success">
                <div class="card-body">
                    <h6 class="text-muted">Returned Books</h6>
                    <h3 class="text-success">@ViewBag.ReturnedCount</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card shadow-sm border-danger">
                <div class="card-body">
                    <h6 class="text-muted">Overdue</h6>
                    <h3 class="text-danger">@ViewBag.OverdueCount</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card shadow-sm border-secondary">
                <div class="card-body">
                    <h6 class="text-muted">Total Borrowings</h6>
                    <h3 class="text-dark">@(ViewBag.BorrowedCount + ViewBag.ReturnedCount)</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-3">
            <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
        </div>
    }

    <!-- Filters -->
    <div class="card shadow-sm mt-4 mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0 text-dark"><i class="bi bi-funnel"></i> Filter Borrowings</h5>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Status</label>
                    <select name="status" class="form-select">
                        <option value="">All</option>
                        <option value="active" selected="@(selectedStatus == "active")">Active</option>
                        <option value="returned" selected="@(selectedStatus == "returned")">Returned</option>
                        <option value="overdue" selected="@(selectedStatus == "overdue")">Overdue</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Search</label>
                    <input type="text" name="search" class="form-control" placeholder="Search by user or book..." value="@searchTerm" />
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-search"></i> Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Table -->
    @if (!Model.Any())
    {
        <div class="alert alert-warning mt-5">
            <h4 class="alert-heading"><i class="bi bi-info-circle"></i> No borrowings found!</h4>
            <p class="mb-0">Try changing your filters or add new borrowings.</p>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <h5 class="mb-0 text-dark"><i class="bi bi-list-ul"></i> All Borrowings (@Model.Count())</h5>
            </div>
            <div class="card-body p-0">
                <table class="table table-hover table-striped align-middle text-center mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>Book</th>
                            <th>User</th>
                            <th>Borrowed</th>
                            <th>Due Date</th>
                            <th>Returned</th>
                            <th>Status</th>
                            @if (isAdmin)
                            {
                                <th>Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var borrowing in Model)
                        {
                            <tr class="@(borrowing.IsOverdue ? "table-danger" : "")">
                                <td>
                                    <strong>@borrowing.Book?.Title</strong><br />
                                    <small class="text-muted">@borrowing.Book?.Author</small>
                                </td>
                                <td>
                                    @borrowing.User?.FullName <br />
                                    <small class="text-muted">@borrowing.User?.Email</small>
                                </td>
                                <td>@borrowing.BorrowedDate.ToString("MMM dd, yyyy")</td>
                                <td>@borrowing.DueDate.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @if (borrowing.IsReturned)
                                    {
                                        <span>@borrowing.ReturnedDate?.ToString("MMM dd, yyyy")</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not returned</span>
                                    }
                                </td>
                                <td>
                                    @if (borrowing.IsReturned)
                                    {
                                        <span class="badge bg-success">Returned</span>
                                    }
                                    else if (borrowing.IsOverdue)
                                    {
                                        <span class="badge bg-danger">Overdue</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark">Active</span>
                                    }
                                </td>
                                @if (isAdmin)
                                {
                                    <td>
                                        <a asp-action="Details" asp-route-id="@borrowing.Id"
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function refreshStats() {
            fetch('/Borrowing/GetStatistics')
                .then(r => r.json())
                .then(d => location.reload())
                .catch(e => console.error(e));
        }
        setInterval(refreshStats, 30000);
    </script>
}
