@using LibraryManagementSystem.Entities
@model Borrowing

@{
    ViewData["Title"] = "Borrowing Details";
    var isAdmin = User.IsInRole("Admin");
    var isOwner = Model.UserId == int.Parse(User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0");
}

<style>
    body {
        background-color: #f8f9fa;
        color: #212529;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .borrowing-details-container {
        padding: 40px 0;
    }

    .card-custom {
        background-color: #ffffff;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        padding: 25px;
        margin-bottom: 25px;
        transition: 0.3s ease;
    }

    .card-custom:hover {
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    h1, h4, h5 {
        color: #343a40;
    }

    .book-cover {
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 3px 8px rgba(0,0,0,0.1);
        max-height: 350px;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-block;
    }

    .status-active {
        background-color: #007bff;
        color: white;
    }

    .status-returned {
        background-color: #6c757d;
        color: white;
    }

    .status-overdue {
        background-color: #dc3545;
        color: white;
    }

    .info-item {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 12px 15px;
        margin-bottom: 10px;
    }

    .info-label {
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 3px;
    }

    .info-value {
        font-weight: 600;
        color: #212529;
    }

    .btn-custom {
        border-radius: 20px;
        padding: 10px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

    .btn-primary-custom {
        background-color: #0d6efd;
        color: white;
    }

    .btn-success-custom {
        background-color: #198754;
        color: white;
    }

    .btn-secondary-custom {
        background-color: #6c757d;
        color: white;
    }

    .btn-danger-custom {
        background-color: #dc3545;
        color: white;
    }

    .btn-custom:hover {
        opacity: 0.9;
        transform: translateY(-2px);
    }

    .overdue-alert {
        background-color: #f8d7da;
        border-left: 5px solid #dc3545;
        padding: 15px 20px;
        border-radius: 8px;
        color: #721c24;
        margin-bottom: 20px;
    }

    .timeline-item {
        border-left: 3px solid #0d6efd;
        padding-left: 12px;
        margin-bottom: 15px;
    }

    .timeline-item.overdue {
        border-color: #dc3545;
    }

    .timeline-item.completed {
        border-color: #198754;
    }

    .timeline-item small {
        color: #6c757d;
    }
</style>

<div class="borrowing-details-container">
    <div class="container">

        <!-- Overdue Alert -->
        @if (Model.IsOverdue)
        {
            <div class="overdue-alert">
                <strong>?? Overdue:</strong> This book is @Model.DaysOverdue day(s) overdue. Please return it soon.
            </div>
        }

        <!-- Main Card -->
        <div class="card-custom">
            <div class="row">
                <div class="col-md-4 text-center mb-4">
                    <img src="@($"/images/books/{Model.Book?.CoverImageUrl}")"
                         alt="@Model.Book?.Title"
                         class="book-cover img-fluid" />
                    <div class="mt-3">
                        @if (Model.IsOverdue)
                        {
                            <span class="status-badge status-overdue">Overdue</span>
                        }
                        else if (Model.IsReturned)
                        {
                            <span class="status-badge status-returned">Returned</span>
                        }
                        else
                        {
                            <span class="status-badge status-active">Active</span>
                        }
                    </div>
                </div>

                <div class="col-md-8">
                    <h1>@Model.Book?.Title</h1>
                    <h5 class="text-muted mb-3">by @Model.Book?.Author</h5>

                    @if (isAdmin)
                    {
                        <div class="mb-3">
                            <strong>User:</strong> @Model.User?.FullName <br />
                            <small class="text-muted">@Model.User?.Email</small>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6 info-item">
                            <div class="info-label">Borrowed Date</div>
                            <div class="info-value">@Model.BorrowedDate.ToString("MMM dd, yyyy")</div>
                        </div>
                        <div class="col-md-6 info-item">
                            <div class="info-label">Due Date</div>
                            <div class="info-value">@Model.DueDate.ToString("MMM dd, yyyy")</div>
                        </div>

                        @if (Model.IsReturned)
                        {
                            <div class="col-md-6 info-item">
                                <div class="info-label">Returned Date</div>
                                <div class="info-value">@Model.ReturnedDate?.ToString("MMM dd, yyyy")</div>
                            </div>
                        }
                    </div>

                    <div class="mt-4">
                        <h5><i class="bi bi-clock-history"></i> Timeline</h5>
                        <div class="timeline">
                            <div class="timeline-item completed">
                                <strong>Book Borrowed</strong><br />
                                <small>@Model.BorrowedDate.ToString("MMMM dd, yyyy")</small>
                            </div>
                            @if (Model.IsReturned)
                            {
                                <div class="timeline-item completed">
                                    <strong>Book Returned</strong><br />
                                    <small>@Model.ReturnedDate?.ToString("MMMM dd, yyyy")</small>
                                </div>
                            }
                            else
                            {
                                <div class="timeline-item @(Model.IsOverdue ? "overdue" : "")">
                                    <strong>Due Date</strong><br />
                                    <small>@Model.DueDate.ToString("MMMM dd, yyyy")</small>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="mt-4">
                        @if (!Model.IsReturned && (isOwner))
                        {
                            <form asp-action="Return" asp-controller="Borrowing" method="post" class="d-inline">
                                <input type="hidden" name="bookId" value="@Model.BookId" />
                                <button type="submit" class="btn btn-custom btn-success-custom"
                                        onclick="return confirm('Are you sure you want to return this book?')">
                                    Return Book
                                </button>
                            </form>
                        }

                        <a href="@Url.Action("Details", "Book", new { id = Model.BookId })"
                           class="btn btn-custom btn-primary-custom">
                            View Book Details
                        </a>

                        @if (isAdmin)
                        {
                            <a href="@Url.Action("Index", "Borrowing")"
                               class="btn btn-custom btn-secondary-custom">
                                Back to All Borrowings
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("MyBorrowings", "Borrowing")"
                               class="btn btn-custom btn-secondary-custom">
                                Back to My Borrowings
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
